# Default values for cf-switch.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/meyeringh/cf-switch
  tag: v0.1.0
  pullPolicy: IfNotPresent

# Image pull secrets for private registries
imagePullSecrets: []
# - name: regcred

nameOverride: ""
fullnameOverride: ""

# Service account configuration
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# RBAC configuration
rbac:
  # Specifies whether RBAC resources should be created
  create: true
  # Name of the secret that RBAC permissions apply to
  secretName: cf-switch-auth

# Pod annotations
podAnnotations: {}

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65532
  runAsGroup: 65532
  fsGroup: 65532

# Container security context
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532
  runAsGroup: 65532
  capabilities:
    drop:
    - ALL

# Service configuration
service:
  type: ClusterIP
  port: 8080

# Environment variables
# Use 'value' for direct values or 'valueFrom' for secrets/configmaps
env:
  DEST_HOSTNAMES:
    value: "paperless.meyeringh.org,photos.example.com"
  CLOUDFLARE_ZONE_ID:
    value: ""  # User must set this
  CLOUDFLARE_API_TOKEN:
    # Example of sourcing from an existing secret via valueFrom
    valueFrom:
      secretKeyRef:
        name: cloudflare-api-token
        key: token
  CF_RULE_DEFAULT_ENABLED:
    value: "false"
  HTTP_ADDR:
    value: ":8080"
  RECONCILE_INTERVAL:
    value: "60s"

# Resource limits and requests
resources:
  limits:
    cpu: 200m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

# Liveness probe configuration
livenessProbe:
  httpGet:
    path: /healthz
    port: http
    scheme: HTTP
  initialDelaySeconds: 10
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

# Readiness probe configuration
readinessProbe:
  httpGet:
    path: /readyz
    port: http
    scheme: HTTP
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# ServiceMonitor for Prometheus monitoring (requires prometheus-operator)
serviceMonitor:
  enabled: false
  # Additional labels for ServiceMonitor
  labels: {}
  # Interval for scraping metrics
  interval: 30s
  # Path to scrape metrics from
  path: /metrics
  # Namespace to create ServiceMonitor in (default: same as release)
  namespace: ""

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 1

# Horizontal Pod Autoscaler
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes
volumes: []
# - name: tmp
#   emptyDir: {}

# Additional volume mounts
volumeMounts: []
# - name: tmp
#   mountPath: /tmp

# Additional containers
extraContainers: []

# Additional init containers
initContainers: []

# Pod labels
podLabels: {}

# Pod selector labels (in addition to default ones)
podSelectorLabels: {}
